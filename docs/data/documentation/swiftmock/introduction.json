{"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This article will cover the basic use of the package and the necessary methods to get started.","type":"text"}]},{"level":3,"anchor":"Mock-Creation","type":"heading","text":"Mock Creation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First of all, I would like to clarify that at the moment the package allows you to create Mock objects only for public protocols that contain only methods and do not contain any properties."}]},{"inlineContent":[{"type":"text","text":"In order to generate a mock type for your protocol, you need to add the "},{"code":"@Mock","type":"codeVoice"},{"type":"text","text":" macro before the protocol keyword."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@Mock","public protocol SomeProtocol {","}"]},{"inlineContent":[{"type":"text","text":"This macro will generate a new public type with the protocol name and the suffix "},{"type":"codeVoice","code":"Mock"},{"type":"text","text":". In our example, the type name will be "},{"code":"SomeProtocolMock","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Stubbing basics","level":3,"anchor":"Stubbing-basics"},{"type":"paragraph","inlineContent":[{"text":"Let’s add the ","type":"text"},{"type":"codeVoice","code":"getAlbumName()"},{"text":" method to our protocol, which returns the name of the album with the ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" type. And let’s move on to writing the test."}]},{"code":["@Mock","public protocol SomeProtocol {","\tfunc getAlbumName() async throws -> String","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"From this moment on, the generated mock object contains the basic functionality for stubbing protocol methods. To stub methods we must use the "},{"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/when(_:)-1l8q0","type":"reference","isActive":true},{"text":" function. As a function argument, we must indicate which method of which mock object we want to stub. This is done by calling a generated method with an identical name and the ","type":"text"},{"code":"$","type":"codeVoice"},{"type":"text","text":" prefix on the mock object."}]},{"code":["func testSomeProtocol() async throws {","\tlet mock = SomeProtocolMock()","\t","\twhen(mock.$getAlbumName())","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/when(_:)-1l8q0","type":"reference","isActive":true},{"text":" function returns us a builder, which allows us to determine what our method should return if called. The ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/AsyncThrowsMethodInvocationBuilder\/thenReturn(_:)-52q00","isActive":true},{"text":" method is used for this.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["func testSomeProtocol async throws {","\tlet mock = SomeProtocolMock()","","\twhen(mock.$getAlbumName())","\t\t.thenReturn(\"I'mperfect\")","}"]},{"inlineContent":[{"type":"text","text":"After this, whenever we call the "},{"type":"codeVoice","code":"getAlbumName()"},{"type":"text","text":" method, we will receive the value that we specified in the "},{"isActive":true,"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/AsyncThrowsMethodInvocationBuilder\/thenReturn(_:)-52q00","type":"reference"},{"type":"text","text":" method."}],"type":"paragraph"},{"syntax":"swift","code":["func testSomeProtocol() async throws {","\tlet mock = SomeProtocolMock()","","\twhen(mock.$getAlbumName())","\t\t.thenReturn(\"I'mperfect\")","","\tlet albumName = try await mock.getAlbumName()","","\tXCTAssertEqual(\"I'mperfect\", albumName)","}"],"type":"codeListing"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Introduction"},"abstract":[{"text":"First steps in protocol mocking.","type":"text"}],"metadata":{"modules":[{"name":"SwiftMock"}],"role":"article","roleHeading":"Article","title":"Introduction"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftmock\/introduction"]}],"seeAlsoSections":[{"title":"Usage","generated":true,"identifiers":["doc:\/\/SwiftMock\/documentation\/SwiftMock\/Stubbing","doc:\/\/SwiftMock\/documentation\/SwiftMock\/Argument-Matchers"]}],"hierarchy":{"paths":[["doc:\/\/SwiftMock\/documentation\/SwiftMock"]]},"sections":[],"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://SwiftMock/documentation/SwiftMock/AsyncThrowsMethodInvocationBuilder/thenReturn(_:)-52q00":{"role":"symbol","type":"topic","url":"\/documentation\/swiftmock\/asyncthrowsmethodinvocationbuilder\/thenreturn(_:)-52q00","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"thenReturn"},{"text":"(","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/AsyncThrowsMethodInvocationBuilder\/thenReturn(_:)-52q00","title":"thenReturn(_:)","abstract":[],"kind":"symbol"},"doc://SwiftMock/documentation/SwiftMock/Argument-Matchers":{"abstract":[{"type":"text","text":"This article talks about how Argument Matcher works."}],"type":"topic","kind":"article","url":"\/documentation\/swiftmock\/argument-matchers","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Argument-Matchers","title":"Argument Matchers","role":"article"},"doc://SwiftMock/documentation/SwiftMock/when(_:)-1l8q0":{"abstract":[{"text":"Enables stubbing methods. Use it when you want the mock to return particular value when particular method is called.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/when(_:)-1l8q0","title":"when(_:)","url":"\/documentation\/swiftmock\/when(_:)-1l8q0","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"when","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Arguments","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"AsyncMethodSignature","kind":"typeIdentifier","preciseIdentifier":"s:9SwiftMock20AsyncMethodSignatureV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Arguments"},{"kind":"text","text":", "},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:9SwiftMock28AsyncMethodInvocationBuilderC","text":"AsyncMethodInvocationBuilder","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Arguments"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"text":">","kind":"text"}],"type":"topic"},"doc://SwiftMock/documentation/SwiftMock":{"role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"A package to simplify writing tests by automating the process of creating mock objects.","type":"text"}],"url":"\/documentation\/swiftmock","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock","title":"SwiftMock"},"doc://SwiftMock/documentation/SwiftMock/Stubbing":{"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Stubbing","url":"\/documentation\/swiftmock\/stubbing","kind":"article","role":"article","title":"Stubbing","type":"topic","abstract":[{"type":"text","text":"This article describes in detail the available possibilities of the stubbing method."}]}}}