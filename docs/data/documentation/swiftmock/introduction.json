{"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"This article will cover the basic use of the package and the necessary methods to get started."}],"type":"paragraph"},{"text":"Mock Creation","type":"heading","level":3,"anchor":"Mock-Creation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First of all, I would like to clarify that at the moment the package allows you to create Mock objects only for public protocols that contain only methods and do not contain any properties."}]},{"inlineContent":[{"text":"In order to generate a mock type for your protocol, you need to add the ","type":"text"},{"code":"@Mock","type":"codeVoice"},{"type":"text","text":" macro before the protocol keyword."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Mock","public protocol SomeProtocol {","}"]},{"inlineContent":[{"text":"This macro will generate a new public type with the protocol name and the suffix ","type":"text"},{"code":"Mock","type":"codeVoice"},{"type":"text","text":". In our example, the type name will be "},{"code":"SomeProtocolMock","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","text":"Stubbing basics","anchor":"Stubbing-basics","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s add the "},{"code":"getAlbumName()","type":"codeVoice"},{"text":" method to our protocol, which returns the name of the album with the ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" type. And let’s move on to writing the test."}]},{"code":["@Mock","public protocol SomeProtocol {","\tfunc getAlbumName() async throws -> String","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"From this moment on, the generated mock object contains the basic functionality for stubbing protocol methods. To stub methods we must use the "},{"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/when(_:)-1l8q0","type":"reference","isActive":true},{"type":"text","text":" function. As a function argument, we must indicate which method of which mock object we want to stub. This is done by calling a generated method with an identical name and the "},{"type":"codeVoice","code":"$"},{"type":"text","text":" prefix on the mock object."}]},{"syntax":"swift","type":"codeListing","code":["func testSomeProtocol() async throws {","\tlet mock = SomeProtocolMock()","\t","\twhen(mock.$getAlbumName())","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/when(_:)-1l8q0","isActive":true},{"type":"text","text":" function returns us a builder, which allows us to determine what our method should return if called. The "},{"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/AsyncThrowsMethodInvocationBuilder\/thenReturn(_:)-52q00","isActive":true},{"type":"text","text":" method is used for this."}]},{"code":["func testSomeProtocol async throws {","\tlet mock = SomeProtocolMock()","","\twhen(mock.$getAlbumName())","\t\t.thenReturn(\"I'mperfect\")","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After this, whenever we call the "},{"type":"codeVoice","code":"getAlbumName()"},{"type":"text","text":" method, we will receive the value that we specified in the "},{"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/AsyncThrowsMethodInvocationBuilder\/thenReturn(_:)-52q00","isActive":true},{"type":"text","text":" method."}]},{"syntax":"swift","type":"codeListing","code":["func testSomeProtocol() async throws {","\tlet mock = SomeProtocolMock()","","\twhen(mock.$getAlbumName())","\t\t.thenReturn(\"I'mperfect\")","","\tlet albumName = try await mock.getAlbumName()","","\tXCTAssertEqual(\"I'mperfect\", albumName)","}"]},{"inlineContent":[{"type":"text","text":"For more details see: "},{"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Stubbing","isActive":true,"type":"reference"}],"type":"paragraph"},{"text":"Verification basics","anchor":"Verification-basics","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"When we stab our mock objects, most often we want to check that the necessary methods on the mock object have been called. For this purpose, there is the "},{"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/verify(_:times:)","isActive":true},{"type":"text","text":" method, which allows you to check the number of calls of a particular method and with what arguments it was called."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Let’s look at the following example. We want to write a test that checks that we requested a name for each album id passed in and check that we get the same album names that we passed into the mock in the correct order."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Let’s imagine the following facade above our service"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["final class SomeFacade {","\tvar service: SomeProtocol","","\tinit(service: SomeProtocol) {","\t\tself.service = service","\t}","","\tfunc fetchAlbumNames(_ ids: [String]) async throws -> [String] {","\t\tvar albums = [String]","\t\talbums.reserveCapacity(ids.count)","\t\tfor id in ids {","\t\t\ttry await albums.append(service.getAlbumName(id: id))","\t\t}","\t\treturn albums","\t}","}"]},{"inlineContent":[{"text":"For this test, first of all, we must create a mock and stab the method with all the necessary data. After that, we create our facade object and inject the mock there. As a final step, we call the facade method we want to test, get the data, check it and check the mock calls.","type":"text"}],"type":"paragraph"},{"code":["func testFetchAlbum() async throws {","\tlet mock = SomeProtocolMock()","","\tlet passedIds = [","\t\t\"id1\",","\t\t\"id2\",","\t\t\"id3\",","\t\t\"id4\",","\t]","","\tlet expected = [","\t\t\"#4\",","\t\t\"Inspiration Is Dead\",","\t\t\"Just a Moment\",","\t\t\"Still a Sigure Virgin?\",","\t]","","\tfor (id, name) in zip(passedIds, expected) {","\t\twhen(mock.$getAlbumName(id: eq(id)))","\t\t\t.thenReturn(name)","\t}","","\tlet facade = SomeFacade(service: mock)","","\tlet actual = try await facade.fetchAlbumNames(passedIds)","","\tXCTAssertEqual(expected, actual)","","\tfor id in passedIds {","\t\tverify(mock).getAlbumName(id: eq(id))","\t}","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more details see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Verifying"}]}]}],"metadata":{"title":"Introduction","modules":[{"name":"SwiftMock"}],"role":"article","roleHeading":"Article"},"abstract":[{"text":"First steps in protocol mocking.","type":"text"}],"identifier":{"url":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Introduction","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SwiftMock\/documentation\/SwiftMock"]]},"sections":[],"kind":"article","seeAlsoSections":[{"title":"Usage","identifiers":["doc:\/\/SwiftMock\/documentation\/SwiftMock\/Stubbing","doc:\/\/SwiftMock\/documentation\/SwiftMock\/Argument-Matchers","doc:\/\/SwiftMock\/documentation\/SwiftMock\/Verifying"],"generated":true}],"variants":[{"paths":["\/documentation\/swiftmock\/introduction"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://SwiftMock/documentation/SwiftMock/when(_:)-1l8q0":{"type":"topic","url":"\/documentation\/swiftmock\/when(_:)-1l8q0","role":"symbol","abstract":[{"type":"text","text":"Enables stubbing methods. Use it when you want the mock to return particular value when particular method is called."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"when","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Arguments"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Result"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"AsyncMethodSignature","preciseIdentifier":"s:9SwiftMock20AsyncMethodSignatureV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Arguments"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:9SwiftMock28AsyncMethodInvocationBuilderC","kind":"typeIdentifier","text":"AsyncMethodInvocationBuilder"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Arguments"},{"text":", ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"when(_:)","kind":"symbol","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/when(_:)-1l8q0"},"doc://SwiftMock/documentation/SwiftMock/Argument-Matchers":{"type":"topic","title":"Argument Matchers","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Argument-Matchers","url":"\/documentation\/swiftmock\/argument-matchers","abstract":[{"type":"text","text":"This article talks about how Argument Matcher works."}],"kind":"article","role":"article"},"doc://SwiftMock/documentation/SwiftMock":{"title":"SwiftMock","type":"topic","kind":"symbol","url":"\/documentation\/swiftmock","role":"collection","abstract":[{"text":"A package to simplify writing tests by automating the process of creating mock objects.","type":"text"}],"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock"},"doc://SwiftMock/documentation/SwiftMock/verify(_:times:)":{"url":"\/documentation\/swiftmock\/verify(_:times:)","abstract":[],"role":"symbol","title":"verify(_:times:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"verify"},{"text":"<","kind":"text"},{"text":"Mock","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Mock"},{"kind":"text","text":", "},{"text":"times","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9SwiftMock12TimesMatchera","text":"TimesMatcher","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Mock"},{"text":".","kind":"text"},{"text":"Verify","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/verify(_:times:)"},"doc://SwiftMock/documentation/SwiftMock/Stubbing":{"role":"article","url":"\/documentation\/swiftmock\/stubbing","title":"Stubbing","abstract":[{"type":"text","text":"This article describes in detail the available possibilities of the stubbing method."}],"type":"topic","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Stubbing","kind":"article"},"doc://SwiftMock/documentation/SwiftMock/Verifying":{"type":"topic","title":"Verifying","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Verifying","url":"\/documentation\/swiftmock\/verifying","kind":"article","abstract":[{"type":"text","text":"This article describes in detail the available possibilities of the "},{"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/verify(_:times:)","isActive":true,"type":"reference"},{"type":"text","text":" method."}],"role":"article"},"doc://SwiftMock/documentation/SwiftMock/AsyncThrowsMethodInvocationBuilder/thenReturn(_:)-52q00":{"abstract":[],"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/AsyncThrowsMethodInvocationBuilder\/thenReturn(_:)-52q00","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"thenReturn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"thenReturn(_:)","type":"topic","url":"\/documentation\/swiftmock\/asyncthrowsmethodinvocationbuilder\/thenreturn(_:)-52q00"}}}