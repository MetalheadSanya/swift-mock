{"hierarchy":{"paths":[["doc:\/\/SwiftMock\/documentation\/SwiftMock"]]},"metadata":{"role":"article","modules":[{"name":"SwiftMock"}],"roleHeading":"Article","title":"Verifying"},"identifier":{"url":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Verifying","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When we work with mocks we want to have some flexibility in our capabilities. Let’s look at the package’s capabilities."}]},{"type":"heading","level":3,"text":"Checking that method was called","anchor":"Checking-that-method-was-called"},{"inlineContent":[{"text":"To verify that the mock method was called, use the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/verify(_:times:)","isActive":true},{"text":" method and pass the mock object as the first argument. This method will create a ","type":"text"},{"type":"codeVoice","code":"Verify"},{"text":" structure for you that has the same methods as your protocol. You can call any method from the protocol methods to check that the method has currently been called.","type":"text"}],"type":"paragraph"},{"code":["@Mock","public protocol AlbumService {","\tfunc getAlbumName(id: String) async throws -> String","}","","","func test() {","\tlet mock = AlbumServiceMock()","","\twhen(mock.$getAlbumName())","\t\t.thenReturn(\"#4\")","","\t_ = mock.getAlbumName(id: \"id1\")","","\tverify(mock).getAlbumName()","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"By default, verify checks that the method was called exactly one time. If the method was called more than once, you will receive an error.","type":"text"}],"type":"paragraph"},{"type":"heading","level":3,"text":"Checking that method was called with specific arguments","anchor":"Checking-that-method-was-called-with-specific-arguments"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The methods of a "},{"type":"codeVoice","code":"Verify"},{"type":"text","text":" structure have all the same methods as your protocol with one exception. All method arguments are replaced with a wrapper in the form of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/ArgumentMatcher"},{"type":"text","text":". As with stubbing, the default argument value is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/any()"},{"text":". If you want to check that a method was called with a certain argument, then you need to specify the appropriate ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/ArgumentMatcher","isActive":true},{"type":"text","text":" for the arguments you want to check."}]},{"syntax":"swift","code":["@Mock","public protocol AlbumService {","\tfunc getAlbumName(id: String) async throws -> String","}","","","func test() {","\tlet mock = AlbumServiceMock()","","\twhen(mock.$getAlbumName())","\t\t.thenReturn(\"#4\")","","\t_ = mock.getAlbumName(id: \"id1\")","","\t\/\/ This test fail, because we don't have ","\t\/\/ mock.getAlbumName(id: \"id2\") in out test. ","\tverify(mock).getAlbumName(id: eq(\"id2\")) ","}"],"type":"codeListing"},{"anchor":"Checking-that-method-was-called-specific-times","text":"Checking that method was called specific times","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/verify(_:times:)","type":"reference","isActive":true},{"type":"text","text":" method can check not only that the method was called once, but also a specific number of times. The "},{"code":"times","type":"codeVoice"},{"text":" parameter of the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/verify(_:times:)","isActive":true},{"text":" method is used for this. This parameter type is ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/TimesMatcher"},{"type":"text","text":" and you can use "},{"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/times(_:)","isActive":true,"type":"reference"},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/never()","isActive":true},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/atLeast(_:)"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/atMost(_:)"},{"text":" as examples, or create your own.","type":"text"}]},{"inlineContent":[{"text":"The following example checks that the method has been called at least twice.","type":"text"}],"type":"paragraph"},{"code":["@Mock","public protocol AlbumService {","\tfunc getAlbumName(id: String) async throws -> String","}","","","func test() {","\tlet mock = AlbumServiceMock()","","\twhen(mock.$getAlbumName())","\t\t.thenReturn(\"#4\")","\t\t.thenReturn(\"Inspiration Is Dead\")","","\t_ = mock.getAlbumName(id: \"id1\")","\t_ = mock.getAlbumName(id: \"id2\")","","\tverify(mock, times: atLeast(2)).getAlbumName() ","}"],"syntax":"swift","type":"codeListing"}]}],"abstract":[{"text":"This article describes in detail the available possibilities of the ","type":"text"},{"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/verify(_:times:)","type":"reference","isActive":true},{"type":"text","text":" method."}],"kind":"article","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftMock\/documentation\/SwiftMock\/Introduction","doc:\/\/SwiftMock\/documentation\/SwiftMock\/Stubbing","doc:\/\/SwiftMock\/documentation\/SwiftMock\/Argument-Matchers"],"generated":true,"title":"Usage"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftmock\/verifying"]}],"references":{"doc://SwiftMock/documentation/SwiftMock/atMost(_:)":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atMost","kind":"identifier"},{"kind":"text","text":"("},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9SwiftMock12TimesMatchera","text":"TimesMatcher"}],"url":"\/documentation\/swiftmock\/atmost(_:)","title":"atMost(_:)","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/atMost(_:)","abstract":[{"type":"text","text":"Checks that method was called at most "},{"type":"codeVoice","code":"count"},{"type":"text","text":" times."}]},"doc://SwiftMock/documentation/SwiftMock/TimesMatcher":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimesMatcher"}],"url":"\/documentation\/swiftmock\/timesmatcher","title":"TimesMatcher","navigatorTitle":[{"text":"TimesMatcher","kind":"identifier"}],"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/TimesMatcher","abstract":[{"text":"A function type that tests the function call count.","type":"text"}]},"doc://SwiftMock/documentation/SwiftMock":{"title":"SwiftMock","type":"topic","kind":"symbol","url":"\/documentation\/swiftmock","role":"collection","abstract":[{"text":"A package to simplify writing tests by automating the process of creating mock objects.","type":"text"}],"identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock"},"doc://SwiftMock/documentation/SwiftMock/times(_:)":{"title":"times(_:)","type":"topic","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/times(_:)","url":"\/documentation\/swiftmock\/times(_:)","abstract":[{"type":"text","text":"Checks that method was called exactly "},{"type":"codeVoice","code":"count"},{"text":" times.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"times","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:9SwiftMock12TimesMatchera","text":"TimesMatcher"}]},"doc://SwiftMock/documentation/SwiftMock/any()":{"type":"topic","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/any()","title":"any()","url":"\/documentation\/swiftmock\/any()","abstract":[{"text":"Any possible value is suitable.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"any","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Arguments"},{"kind":"text","text":">() -> "},{"kind":"typeIdentifier","text":"ArgumentMatcher","preciseIdentifier":"s:9SwiftMock15ArgumentMatchera"},{"text":"<","kind":"text"},{"text":"Arguments","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://SwiftMock/documentation/SwiftMock/verify(_:times:)":{"url":"\/documentation\/swiftmock\/verify(_:times:)","abstract":[],"role":"symbol","title":"verify(_:times:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"verify"},{"text":"<","kind":"text"},{"text":"Mock","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Mock"},{"kind":"text","text":", "},{"text":"times","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9SwiftMock12TimesMatchera","text":"TimesMatcher","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Mock"},{"text":".","kind":"text"},{"text":"Verify","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/verify(_:times:)"},"doc://SwiftMock/documentation/SwiftMock/Stubbing":{"role":"article","url":"\/documentation\/swiftmock\/stubbing","title":"Stubbing","abstract":[{"type":"text","text":"This article describes in detail the available possibilities of the stubbing method."}],"type":"topic","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Stubbing","kind":"article"},"doc://SwiftMock/documentation/SwiftMock/never()":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"never"},{"text":"() -> ","kind":"text"},{"text":"TimesMatcher","kind":"typeIdentifier","preciseIdentifier":"s:9SwiftMock12TimesMatchera"}],"url":"\/documentation\/swiftmock\/never()","title":"never()","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/never()","abstract":[{"type":"text","text":"Checks that method wasn’t called."}]},"doc://SwiftMock/documentation/SwiftMock/ArgumentMatcher":{"type":"topic","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/ArgumentMatcher","title":"ArgumentMatcher","navigatorTitle":[{"text":"ArgumentMatcher","kind":"identifier"}],"url":"\/documentation\/swiftmock\/argumentmatcher","abstract":[{"type":"text","text":"A function type that tests the value of an argument to a called function."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"ArgumentMatcher","kind":"identifier"}]},"doc://SwiftMock/documentation/SwiftMock/Introduction":{"title":"Introduction","abstract":[{"type":"text","text":"First steps in protocol mocking."}],"kind":"article","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Introduction","url":"\/documentation\/swiftmock\/introduction","role":"article","type":"topic"},"doc://SwiftMock/documentation/SwiftMock/Argument-Matchers":{"type":"topic","title":"Argument Matchers","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/Argument-Matchers","url":"\/documentation\/swiftmock\/argument-matchers","abstract":[{"type":"text","text":"This article talks about how Argument Matcher works."}],"kind":"article","role":"article"},"doc://SwiftMock/documentation/SwiftMock/atLeast(_:)":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"atLeast","kind":"identifier"},{"kind":"text","text":"("},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TimesMatcher","preciseIdentifier":"s:9SwiftMock12TimesMatchera"}],"url":"\/documentation\/swiftmock\/atleast(_:)","title":"atLeast(_:)","identifier":"doc:\/\/SwiftMock\/documentation\/SwiftMock\/atLeast(_:)","abstract":[{"type":"text","text":"Checks that method was calles at least "},{"type":"codeVoice","code":"count"},{"type":"text","text":" times."}]}}}